# Generated by Django 5.2 on 2025-05-02 17:19

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Directory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity', models.CharField(max_length=256)),
                ('name', models.CharField(max_length=256)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(max_length=64, unique=True, verbose_name='Серийный номер')),
                ('engineID', models.CharField(max_length=256, verbose_name='Зав. № двигателя')),
                ('transmissionID', models.CharField(max_length=256, verbose_name='Зав. № трансмиссии')),
                ('drivingAxleID', models.CharField(max_length=256, verbose_name='Зав. № ведущего моста')),
                ('controlledAxleID', models.CharField(max_length=256, verbose_name='Зав. № управляемого моста')),
                ('deliveryContract', models.CharField(max_length=512, verbose_name='Договор поставки №, дата')),
                ('shipmentDate', models.DateField(verbose_name='Дата отгрузки с завода')),
                ('recipient', models.CharField(max_length=256, verbose_name='Грузополучатель')),
                ('deliveryAddress', models.CharField(max_length=256, verbose_name='Адрес поставки (эксплуатации)')),
                ('equipment', models.CharField(max_length=1024, verbose_name='Комплектация')),
                ('client', models.ForeignKey(limit_choices_to={'profile__role': 'client'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='client_machines', to=settings.AUTH_USER_MODEL, verbose_name='Клиент')),
                ('controlledAxle', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='machines_controlledAxle', to='main_app.directory', verbose_name='Модель управляемого моста')),
                ('drivingAxle', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='machines_drivingAxle', to='main_app.directory', verbose_name='Модель ведущего моста')),
                ('engine', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='machines_engine', to='main_app.directory', verbose_name='Модель двигателя')),
                ('model', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='machines_model', to='main_app.directory', verbose_name='Модель машины')),
                ('serviceCompany', models.ForeignKey(limit_choices_to={'profile__role': 'service'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_machines', to=settings.AUTH_USER_MODEL, verbose_name='Сервисная компания')),
                ('transmission', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='machines_transmission', to='main_app.directory', verbose_name='Модель трансмиссии')),
            ],
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('breakdownDate', models.DateField(verbose_name='Дата отказа (поломки)')),
                ('operating', models.IntegerField(verbose_name='Наработка, м/час')),
                ('breakdownDescription', models.TextField(blank=True, null=True, verbose_name='Описание поломки')),
                ('spareParts', models.CharField(max_length=1024, verbose_name='Используемые запасные части')),
                ('recoveryDate', models.DateField(verbose_name='Дата восстановления')),
                ('downtime', models.PositiveIntegerField(blank=True, null=True, verbose_name='Время простоя техники')),
                ('serviceCompany', models.ForeignKey(limit_choices_to={'profile__role': 'service'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='complaint_services', to=settings.AUTH_USER_MODEL, verbose_name='Сервисная компания')),
                ('breakdownNode', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='breakdownNodes', to='main_app.directory', verbose_name='Узел поломки')),
                ('recoveryMethod', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recovery_methods', to='main_app.directory', verbose_name='Способ восстановления')),
                ('machine', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='complaint_machines', to='main_app.machine', verbose_name='Машина')),
            ],
        ),
        migrations.CreateModel(
            name='Maintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenanceDate', models.DateField(verbose_name='Дата проведения ТО')),
                ('operating', models.IntegerField(verbose_name='Наработка, м/час')),
                ('orderID', models.CharField(max_length=256, verbose_name='№ заказ-наряда')),
                ('orderDate', models.DateField(verbose_name='Дата заказ-наряда')),
                ('machine', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maintenance_machines', to='main_app.machine', verbose_name='Машина')),
                ('maintenanceType', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maintenance_type', to='main_app.directory', verbose_name='Вид ТО')),
                ('maintenance_org', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maintenance_orgs', to='main_app.directory', verbose_name='Организация, проводившая ТО')),
                ('serviceCompany', models.ForeignKey(limit_choices_to={'profile__role': 'service'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maintenance_services', to=settings.AUTH_USER_MODEL, verbose_name='Сервисная компания')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('client', 'Клиент'), ('service', 'Сервисная компания'), ('manager', 'Менеджер')], max_length=20)),
                ('company_name', models.CharField(blank=True, max_length=128, null=True)),
                ('company_description', models.TextField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
